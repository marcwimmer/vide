#!/usr/bin/env python3
import os
import sys
import inspect
import subprocess

docker_host = subprocess.check_output("docker network inspect --format='{{range .IPAM.Config}}{{.Gateway}}{{end}}' bridge", shell=True).strip()

parameters = sys.argv[1:]
args = list(parameters)
files = [x for x in parameters if not x.startswith('-')]

SUDO = '-sudo' in args
if SUDO:
    args = filter(lambda a: a != '-sudo', args)

filepath = inspect.getfile(inspect.currentframe())
dir = os.path.dirname(os.path.join(os.path.dirname(filepath), os.path.realpath(filepath)))
cwd = os.getcwd()

FILE = parameters[0] if len(parameters) == 1 else ""

CURRENT_DIR = cwd
# converts relative path to absolute path
CURRENT_DIR = os.path.join(os.path.dirname(CURRENT_DIR), os.path.realpath(CURRENT_DIR))

APPENDIX = ""
for folder in [
        '/etc',
        '/var',
        '/run',
        '/tmp'
]:
    if CURRENT_DIR.startswith(folder) and not CURRENT_DIR.startswith(folder + "/"):
        APPENDIX = "_"
        FILE = folder + APPENDIX + '/' + FILE[len(folder):]

vimargs = args
env = os.environ.copy()
cmdline = [
    'docker-compose',
    '-f',
    'docker-compose.yml',
    'run',
    '-e',
    'DOCKER_HOST={}'.format(docker_host),
    '-e',
    'PUDB_ADDIN_DEBUG_HOST={}'.format(docker_host),
    'vide',
    '/start.sh',
] + vimargs

path = os.path.expanduser("~/.vide")
if os.path.exists(path):
    cmdline.insert(3, path)
    cmdline.insert(3, '-f')

env.update({
    'LOCAL_UID': str(os.getuid() if not SUDO else 0),
    'HOME': os.path.expandvars("$HOME"),
    'CURRENT_DIR_HOST': os.path.abspath(CURRENT_DIR),
    'CURRENT_DIR': os.path.abspath("{CURRENT_DIR}{APPENDIX}".format(**locals())),
})
subprocess.call(
    cmdline,
    cwd=dir,
    env=env
)
