#!/usr/bin/env python
import os
import sys
import inspect
import subprocess

parameters = sys.argv[1:]
args = list(parameters)
files = [x for x in parameters if not x.startswith('-')]

SUDO = ['-sudo' in args]
if SUDO:
    args = filter(lambda a: a != '-sudo', args)

filepath = inspect.getfile(inspect.currentframe())
dir = os.path.dirname(os.path.join(os.path.dirname(filepath), os.path.realpath(filepath)))
cwd = os.getcwd()

FILE = parameters[0] if len(parameters) == 1 else ""

if not FILE:
    CURRENT_DIR = cwd
else:
    # converts relative path to absolute path
    FILE = os.path.join(os.path.dirname(FILE), os.path.realpath(FILE))
    if os.path.isdir(FILE):
        CURRENT_DIR = FILE
    else:
        CURRENT_DIR = os.path.dirname(FILE)

CURRENT_DIR = os.path.join(os.path.dirname(CURRENT_DIR), os.path.realpath(CURRENT_DIR))

APPENDIX = ""
for folder in [
        '/etc',
        '/var',
        '/run',
        '/tmp'
]:
    if CURRENT_DIR.startswith(folder) and not CURRENT_DIR.startswith(folder + "/"):
        APPENDIX = "_"
        FILE = folder + APPENDIX + '/' + FILE[len(folder):]

vimargs = args

subprocess.Popen([
    'docker-compose',
    'run',
    '--rm',
    '--workdir={}'.format(CURRENT_DIR),
    os.path.expandvars('--volume=$HOME:$HOME'),
    '--volume={CURRENT_DIR}:{CURRENT_DIR}{APPENDIX}'.format(**locals()),
    '-e LOCAL_UID={}'.format(os.getuid() if not SUDO else 0),
    'vide',
    '/start.sh',
] + vimargs, cwd=dir).wait()
