#!/bin/bash
echo install vim
set -e
set +x

if ping -c 1 8.8.8.8; then
    #git clone --depth 1 https://github.com/marcwimmer/vim-my-settings.git
    if [[ "$(find /opt/clone_vimmysettings -type f|wc -l)" == "0" ]]; then
        git clone --depth 1 https://github.com/marcwimmer/vim-my-settings.git /opt/clone_vimmysettings
    fi
fi

echo "setting up vundle, see: https://github.com/gmarik/Vundle.vim"
if [[ "$(find /opt/clone_vundle -type f|wc -l)" == "0" ]]; then
    if ping -c 1 8.8.8.8; then
        git clone --depth 1 https://github.com/gmarik/Vundle.vim.git /opt/clone_vundle
    fi
fi

echo "Download initial UltiSnips"
if [[ "$(find /opt/clone_UltiSnips -type f|wc -l)" == "0" ]]; then
    if ping -c 1 8.8.8.8; then
        git clone --depth 1 https://github.com/marcwimmer/vim-ultisnippets /opt/clone_UltiSnips
    fi
fi

echo "install bundles manually from bundles.list"
BUNDLELIST=/opt/clone_vimmysettings/bundles.list
if [[ ! -f "$BUNDLELIST" ]]; then
    echo "File missing: $BUNDLELIST"
    exit -1
fi

# to speed up debugging, clone is done to /opt/clone; from there copied;
# on rebuild the clone directory is purged

while read bundle
do
    echo cloning bundle $bundle
    if [ -z "$bundle" ]; then
        continue
    fi

    echo $bundle |grep -q "^#" && continue
    #cd ~/.vim/bundle
    cd /opt/clone
    for i in 1 2 3 4 5 6 7 8 9 10;
    do 
        echo $bundle
        bundledirectory=$(echo "${bundle/\.git/}" | rev | cut -d/ -f1 | rev)
        if [[ -d "$bundledirectory" ]]; then
            echo $bundle already exists - going to next bundle
            break
        fi
        git clone --depth 1 --recursive https://github.com/$bundle && break
        sleep 15
    done
done<$BUNDLELIST
